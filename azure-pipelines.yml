trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  backendService: 'petapplication-sp'
  backendResourceGroup: 'WisdomPetMedicine-RG'
  backendStorageAccount: 'storageaccount30808'
  backendContainer: 'terraform'
  backendKey: 'terraform.tfstate'
  workingDir: '$(System.DefaultWorkingDirectory)'

stages:
  - stage: Init
    jobs:
      - job: TerraformInit
        steps:
          - checkout: self

          - script: |
              echo "Working dir: $(workingDir)"
              ls -al $(workingDir)
            displayName: 'List files in working directory'

          - task: TerraformInstaller@0
            displayName: 'Install Terraform CLI'
            inputs:
              terraformVersion: '1.6.6'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '$(backendService)'
              backendAzureRmResourceGroupName: '$(backendResourceGroup)'
              backendAzureRmStorageAccountName: '$(backendStorageAccount)'
              backendAzureRmContainerName: '$(backendContainer)'
              backendAzureRmKey: '$(backendKey)'
              workingDirectory: '$(workingDir)'

  - stage: Validate
    dependsOn: Init
    jobs:
      - job: TerraformValidate
        steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform CLI'
            inputs:
              terraformVersion: '1.6.6'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              environmentServiceNameAzureRM: '$(backendService)'  # Corrected key
              workingDirectory: '$(workingDir)'

  - stage: Plan
    dependsOn: Validate
    jobs:
      - job: TerraformPlan
        steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform CLI'
            inputs:
              terraformVersion: '1.6.6'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: '$(backendService)'
              workingDirectory: '$(workingDir)'

  - stage: Apply
    dependsOn: Plan
    jobs:
      - job: TerraformApply
        steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform CLI'
            inputs:
              terraformVersion: '1.6.6'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: '$(backendService)'
              workingDirectory: '$(workingDir)'
              allowTelemetryCollection: false
