# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Init
    displayName: 'Initialize Terraform'
    jobs:
      - job: TerraformInit
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'petapplication-sp'
              backendAzureRmResourceGroupName: 'WisdomPetMedicine-RG'
              backendAzureRmStorageAccountName: 'storageaccount30808'
              backendAzureRmContainerName: 'terraform'
              backendAzureRmKey: 'terraform.tfstate'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

  - stage: Validate
    displayName: 'Validate Terraform Configuration'
    dependsOn: Init
    jobs:
      - job: TerraformValidate
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'petapplication-sp'
              backendAzureRmResourceGroupName: 'WisdomPetMedicine-RG'
              backendAzureRmStorageAccountName: 'storageaccount30808'
              backendAzureRmContainerName: 'marketing'
              backendAzureRmKey: 'terraform.tfstate'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'validate'
              backendServiceArm: 'devpos-sc'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

  - stage: Plan
    displayName: 'Terraform Plan'
    dependsOn: Validate
    jobs:
      - job: TerraformPlan
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'devpos-sc'
              backendAzureRmResourceGroupName: 'Strorage-RG'
              backendAzureRmStorageAccountName: 'storageaccount308081'
              backendAzureRmContainerName: 'terraform'
              backendAzureRmKey: 'terraform.tfstate'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'devpos-sc'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'devpos-sc'
              workingDirectory: '$(System.DefaultWorkingDirectory)' 